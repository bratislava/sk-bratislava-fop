name: Java CI

on:
  push:
    tags:
      - 'dev**'
      - 'staging**'
      - 'prod**'
    branches:
      - master

env:
  CONTAINER_REGISTRY: harbor.bratislava.sk
  IMAGE_PATH: standalone
  NAMESPACE: standalone

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_VERSION: 0.1-SNAPSHOT
    steps:
      - uses: actions/checkout@v3

      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.HARBOR_REGISTRY_USERNAME }}
          password: ${{ secrets.HARBOR_REGISTRY_PASSWORD }}

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'adopt'

      - name: Setup Maven
        run: |
          mvn --version
          # This step is a workaround to avoid a decryption issue of Spotify's
          # com.spotify.dockerfile-maven plugin and github's provided maven
          # settings.xml file
          rm ~/.m2/settings.xml

      - name: Build with Maven
        run: |
          mvn clean package

      - name: Install Prerequisites - Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Installing bratiska-cli#stable
        run: |
          yarn global add bratislava/bratiska-cli#stable
          git fetch

      - name: Setup kubectl
        uses: Azure/setup-kubectl@v2.1

      - name: Set Cluster Info & Setup kubectl
        run: |
          if [[ "${GITHUB_BASE_REF,,}" =~ "stagi" ]]; then
            export ENVIRONMENT="staging"
            export CLUSTER_URL="https://tkg.staging.bratislava.sk"
            export CLUSTER_TOKEN=${{ secrets.STAGING_STANDALONE_TOKEN }}
          elif [[ "${GITHUB_BASE_REF,,}" =~ "prod" || "${GITHUB_BASE_REF,,}" =~ "master" || "${GITHUB_BASE_REF,,}" =~ "main" ]]; then
            export ENVIRONMENT="prod"
            export CLUSTER_URL="https://tkg.bratislava.sk"
            export CLUSTER_TOKEN=${{ secrets.PROD_STANDALONE_TOKEN }}
          else
            export ENVIRONMENT="dev"
            export CLUSTER_URL="https://tkg.dev.bratislava.sk"
            export CLUSTER_TOKEN=${{ secrets.DEV_STANDALONE_TOKEN }}
          fi

          export CLUSTER="tkg-innov-${ENVIRONMENT}"

          echo "CLUSTER=${CLUSTER}" >> $GITHUB_ENV
          echo "CLUSTER_URL=${CLUSTER_URL}" >> $GITHUB_ENV

          echo "Deploying to ${CLUSTER_URL}"

          kubectl config set-credentials default --token=${CLUSTER_TOKEN}
          kubectl config set-cluster ${CLUSTER} --insecure-skip-tls-verify --server=${CLUSTER_URL}
          kubectl config set-context ${CLUSTER} --cluster=${CLUSTER} --user=default
          kubectl config use-context ${CLUSTER}

      - name: Build & Deploy
        run: |
          if [[ "${GITHUB_BASE_REF,,}" =~ "stagi" ]]; then
            bratiska-cli deploy --staging --debug --namespace=${NAMESPACE}
          elif [[ "${GITHUB_BASE_REF,,}" =~ "prod" || "${GITHUB_BASE_REF,,}" =~ "master" || "${GITHUB_BASE_REF,,}" =~ "main" ]]; then
            bratiska-cli deploy --production --namespace=${NAMESPACE}
          else
            bratiska-cli deploy --debug --namespace=${NAMESPACE}
          fi
